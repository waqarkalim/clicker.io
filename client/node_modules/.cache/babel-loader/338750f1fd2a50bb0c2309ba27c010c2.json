{"ast":null,"code":"var _jsxFileName = \"/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/src/components/Main.jsx\";\nimport React, { Component } from \"react\";\nimport { Checkbox, FormGroup, FormControlLabel, TextField, Button, Typography, Grid } from \"@material-ui/core\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport GameScreen from \"./GameScreen\"; // import ClientComponent from \"./ClientComponent\";\n\nimport socketIOClient from \"socket.io-client\"; // import openSocket from \"socket.io-client\";\n// const ENDPOINT = \"http://192.168.4.26:3001\";\n// const ENDPOINT = \"http://localhost:5000\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction generateUniqueNumber() {\n  return \"xxxxxxxxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c === \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clickButton = el => {\n      el.click();\n    };\n\n    this.joinRoom = () => {\n      const {\n        id,\n        room,\n        socketIO,\n        username\n      } = this.state;\n      const data = {\n        id: id,\n        room: room,\n        username: username\n      };\n      socketIO.emit(\"new user\", data);\n      this.setState({\n        startGame: true\n      });\n    };\n\n    this.state = {\n      room: \"\",\n      count: 0,\n      loadClient: true,\n      startingScreen: true,\n      createRoomChecked: false,\n      joinRoomChecked: false,\n      roomIdGenerated: false,\n      startGame: false,\n      response: \"\",\n      socketIO: null,\n      id: null,\n      username: \"\",\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: generateUniqueNumber()\n    }, () => {\n      this.setState({\n        socketIO: socketIOClient(ENDPOINT, {\n          transport: [\"websocket\"]\n        })\n      }, () => {\n        this.state.socketIO.on(\"count\", data => {\n          this.setState({\n            count: data\n          });\n        });\n        this.state.socketIO.on(\"users\", data => {\n          this.setState({\n            users: data\n          });\n        });\n      });\n    });\n    return () => this.socketIO.disconnect(); // this.socketIO.emit(\"disconnect\", {\n    //   id: this.state.id,\n    //   room: this.state.room,\n    // });\n  }\n\n  render() {\n    const {\n      id,\n      room,\n      count,\n      loadClient,\n      startingScreen,\n      createRoomChecked,\n      joinRoomChecked,\n      roomIdGenerated,\n      startGame,\n      response,\n      socketIO,\n      username,\n      users\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!startGame ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [startingScreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            style: {\n              padding: \"0.5em\"\n            },\n            children: \"Clicker.io\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: () => {\n              this.setState({\n                startingScreen: false\n              });\n            },\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), !startingScreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            value: username,\n            autoFocus: true // required\n            ,\n            error: username === \"\",\n            onChange: event => {\n              this.setState({\n                username: event.target.value\n              });\n            },\n            placeholder: \"Username\",\n            style: {\n              fontFamily: \"Helvetica\",\n              fontSize: \"32px\",\n              background: \"#ffffff\",\n              padding: \"10px 20px 10px 20px\",\n              // padding: '20px',\n              margin: \"20px\",\n              marginTop: \"20px\",\n              borderRadius: \"12px\",\n              zIndex: \"100\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: createRoomChecked,\n                onChange: () => {\n                  if (!createRoomChecked && joinRoomChecked) {\n                    this.setState({\n                      joinRoomChecked: !joinRoomChecked\n                    });\n                  }\n\n                  this.setState({\n                    createRoomChecked: !createRoomChecked\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this),\n              label: \"Create Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: joinRoomChecked,\n                onChange: () => {\n                  if (createRoomChecked && !joinRoomChecked) {\n                    this.setState({\n                      createRoomChecked: !createRoomChecked\n                    }); // setCreateRoomChecked(!createRoomChecked);\n                  }\n\n                  this.setState({\n                    joinRoomChecked: !joinRoomChecked\n                  }); // setJoinRoomChecked(!joinRoomChecked);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this),\n              label: \"Join Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), createRoomChecked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                this.setState({\n                  room: uuidv4()\n                }, () => {\n                  this.setState({\n                    roomIdGenerated: true\n                  }, () => {\n                    this.joinRoom(); // this.setState({startGame: true});\n                  });\n                });\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Generate Room Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this)\n          }, void 0, false) : null, joinRoomChecked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              value: room,\n              autoFocus: true,\n              helperText: \"Enter Room Id Here...\",\n              onChange: event => {\n                this.setState({\n                  room: event.target.value\n                }); // setRoom(event.target.value);\n              },\n              onKeyPress: ev => {\n                if (ev.key === \"Enter\") {\n                  // Do code here\n                  this.joinRoom();\n                  this.setState({\n                    startGame: true\n                  });\n                  ev.preventDefault();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                this.joinRoom();\n                this.setState({\n                  startGame: true\n                }); // setStartGame(true);\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"Join Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : null, roomIdGenerated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: room\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this)\n          }, void 0, false) : null]\n        }, void 0, true)]\n      }, void 0, true) : null, startGame ? /*#__PURE__*/_jsxDEV(GameScreen, {\n        id: id,\n        count: count,\n        room: room,\n        socketIO: socketIO,\n        username: username,\n        users: users,\n        startGame: startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/src/components/Main.jsx"],"names":["React","Component","Checkbox","FormGroup","FormControlLabel","TextField","Button","Typography","Grid","CountdownCircleTimer","GameScreen","socketIOClient","ENDPOINT","uuidv4","replace","c","r","Math","random","v","toString","generateUniqueNumber","Main","constructor","props","clickButton","el","click","joinRoom","id","room","socketIO","username","state","data","emit","setState","startGame","count","loadClient","startingScreen","createRoomChecked","joinRoomChecked","roomIdGenerated","response","users","componentDidMount","transport","on","disconnect","render","padding","event","target","value","fontFamily","fontSize","background","margin","marginTop","borderRadius","zIndex","ev","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Button,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport GameScreen from \"./GameScreen\";\n\n// import ClientComponent from \"./ClientComponent\";\n\nimport socketIOClient from \"socket.io-client\";\n// import openSocket from \"socket.io-client\";\n// const ENDPOINT = \"http://192.168.4.26:3001\";\n// const ENDPOINT = \"http://localhost:5000\";\n\nconst ENDPOINT = \"\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction generateUniqueNumber() {\n  return \"xxxxxxxxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"\",\n      count: 0,\n      loadClient: true,\n      startingScreen: true,\n      createRoomChecked: false,\n      joinRoomChecked: false,\n      roomIdGenerated: false,\n      startGame: false,\n      response: \"\",\n      socketIO: null,\n      id: null,\n      username: \"\",\n      users: [],\n    };\n  }\n\n  clickButton = (el) => {\n    el.click();\n  };\n\n  componentDidMount() {\n    this.setState({ id: generateUniqueNumber() }, () => {\n      this.setState(\n        { socketIO: socketIOClient(ENDPOINT, { transport: [\"websocket\"] }) },\n        () => {\n          this.state.socketIO.on(\"count\", (data) => {\n            this.setState({ count: data });\n          });\n          this.state.socketIO.on(\"users\", (data) => {\n            this.setState({ users: data });\n          });\n        }\n      );\n    });\n\n    return () =>\n      this.socketIO.disconnect()\n      // this.socketIO.emit(\"disconnect\", {\n      //   id: this.state.id,\n      //   room: this.state.room,\n      // });\n  }\n\n  joinRoom = () => {\n    const { id, room, socketIO, username } = this.state;\n    const data = {\n      id: id,\n      room: room,\n      username: username,\n    };\n    socketIO.emit(\"new user\", data);\n    this.setState({ startGame: true });\n  };\n\n  render() {\n    const {\n      id,\n      room,\n      count,\n      loadClient,\n      startingScreen,\n      createRoomChecked,\n      joinRoomChecked,\n      roomIdGenerated,\n      startGame,\n      response,\n      socketIO,\n      username,\n      users,\n    } = this.state;\n    return (\n      <>\n        {!startGame ? (\n          <>\n            {startingScreen && (\n              <>\n                <Typography variant=\"h1\" style={{ padding: \"0.5em\" }}>\n                  Clicker.io\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => {\n                    this.setState({ startingScreen: false });\n                  }}\n                >\n                  Start\n                </Button>\n              </>\n            )}\n            {!startingScreen && (\n              <>\n                <TextField\n                  value={username}\n                  autoFocus={true}\n                  // required\n                  error={username === \"\"}\n                  onChange={(event) => {\n                    this.setState({ username: event.target.value });\n                  }}\n                  placeholder={\"Username\"}\n                  style={{\n                    fontFamily: \"Helvetica\",\n                    fontSize: \"32px\",\n                    background: \"#ffffff\",\n                    padding: \"10px 20px 10px 20px\",\n                    // padding: '20px',\n                    margin: \"20px\",\n                    marginTop: \"20px\",\n                    borderRadius: \"12px\",\n                    zIndex: \"100\",\n                  }}\n                />\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={createRoomChecked}\n                        onChange={() => {\n                          if (!createRoomChecked && joinRoomChecked) {\n                            this.setState({\n                              joinRoomChecked: !joinRoomChecked,\n                            });\n                          }\n                          this.setState({\n                            createRoomChecked: !createRoomChecked,\n                          });\n                        }}\n                      />\n                    }\n                    label=\"Create Room\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={joinRoomChecked}\n                        onChange={() => {\n                          if (createRoomChecked && !joinRoomChecked) {\n                            this.setState({\n                              createRoomChecked: !createRoomChecked,\n                            });\n                            // setCreateRoomChecked(!createRoomChecked);\n                          }\n                          this.setState({ joinRoomChecked: !joinRoomChecked });\n                          // setJoinRoomChecked(!joinRoomChecked);\n                        }}\n                      />\n                    }\n                    label=\"Join Room\"\n                  />\n                </FormGroup>\n                {createRoomChecked ? (\n                  <>\n                    <Button\n                      onClick={() => {\n                        this.setState({ room: uuidv4() }, () => {\n                          this.setState({ roomIdGenerated: true }, () => {\n                            this.joinRoom();\n                            // this.setState({startGame: true});\n                          });\n                        });\n                      }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Generate Room Id\n                    </Button>\n                  </>\n                ) : null}\n                {joinRoomChecked ? (\n                  <>\n                    <TextField\n                      value={room}\n                      autoFocus={true}\n                      helperText={\"Enter Room Id Here...\"}\n                      onChange={(event) => {\n                        this.setState({ room: event.target.value });\n                        // setRoom(event.target.value);\n                      }}\n                      onKeyPress={(ev) => {\n                        if (ev.key === \"Enter\") {\n                          // Do code here\n                          this.joinRoom();\n                          this.setState({ startGame: true });\n                          ev.preventDefault();\n                        }\n                      }}\n                    />\n                    <Button\n                      onClick={() => {\n                        this.joinRoom();\n                        this.setState({ startGame: true });\n                        // setStartGame(true);\n                      }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Join Room\n                    </Button>\n                  </>\n                ) : null}\n\n                {roomIdGenerated ? (\n                  <>\n                    <Typography>{room}</Typography>\n                  </>\n                ) : null}\n              </>\n            )}\n          </>\n        ) : null}\n        {startGame ? (\n          <GameScreen\n            id={id}\n            count={count}\n            room={room}\n            socketIO={socketIO}\n            username={username}\n            users={users}\n            startGame={startGame}\n          />\n        ) : \n        null}\n      </>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}