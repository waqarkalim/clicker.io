{"ast":null,"code":"import _classCallCheck from\"/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Checkbox,FormGroup,FormControlLabel,TextField,Button,Typography,Grid}from\"@material-ui/core\";import{CountdownCircleTimer}from\"react-countdown-circle-timer\";// import ClientComponent from \"./ClientComponent\";\nimport socketIOClient from\"socket.io-client\";// import openSocket from \"socket.io-client\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT=\"http://192.168.4.26:3001\";function uuidv4(){return\"xxxxxxxx\".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c===\"x\"?r:r&0x3|0x8;return v.toString(16);});}function generateUniqueNumber(){return\"xxxxxxxxxxxxxxxxxxxxxxxx\".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c===\"x\"?r:r&0x3|0x8;return v.toString(16);});}var Main=/*#__PURE__*/function(_Component){_inherits(Main,_Component);var _super=_createSuper(Main);function Main(props){var _this;_classCallCheck(this,Main);_this=_super.call(this,props);_this.clickButton=function(el){el.click();};_this.countingButtonPress=function(event){var startGame=_this.state.startGame;if(startGame){if((event===null||event===void 0?void 0:event.keyCode)===32){_this.handleButtonPress();}}};_this.joinRoom=function(){var _this$state=_this.state,room=_this$state.room,socketIO=_this$state.socketIO,username=_this$state.username;var data={room:room,username:username};socketIO.emit(\"room\",data);_this.setState({startGame:true});};_this.handleButtonPress=function(){var _this$state2=_this.state,id=_this$state2.id,count=_this$state2.count,room=_this$state2.room,socketIO=_this$state2.socketIO,username=_this$state2.username;// this.setState({ count: count+1});\nvar data={id:id,room:room,message:\"Hello World\",timestamp:Date.now(),username:username};console.log(data);socketIO.emit(\"buttonPress\",data);};_this.state={room:\"\",count:0,loadClient:true,startingScreen:true,createRoomChecked:false,joinRoomChecked:false,roomIdGenerated:false,startGame:false,response:\"\",socketIO:null,id:null,username:\"\",users:[]};return _this;}_createClass(Main,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;document.addEventListener(\"keydown\",this.countingButtonPress,false);this.setState({id:generateUniqueNumber()},function(){_this2.setState({socketIO:socketIOClient(ENDPOINT,{transport:[\"websocket\"]})},function(){_this2.state.socketIO.on(\"count\",function(data){_this2.setState({count:data});});_this2.state.socketIO.on(\"users\",function(data){_this2.setState({users:data});});});});return function(){return _this2.socketIO.disconnect();};}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.removeEventListener(\"keydown\",this.countingButtonPress,false);}},{key:\"render\",value:function render(){var _this3=this;var _this$state3=this.state,room=_this$state3.room,count=_this$state3.count,loadClient=_this$state3.loadClient,startingScreen=_this$state3.startingScreen,createRoomChecked=_this$state3.createRoomChecked,joinRoomChecked=_this$state3.joinRoomChecked,roomIdGenerated=_this$state3.roomIdGenerated,startGame=_this$state3.startGame,response=_this$state3.response,socketIO=_this$state3.socketIO,username=_this$state3.username,users=_this$state3.users;return/*#__PURE__*/_jsxs(_Fragment,{children:[!startGame?/*#__PURE__*/_jsxs(_Fragment,{children:[startingScreen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h1\",style:{padding:\"0.5em\"},children:\"Clicker.io\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",size:\"large\",onClick:function onClick(){_this3.setState({startingScreen:false});},children:\"Start\"})]}),!startingScreen&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{value:username,autoFocus:true// required\n,error:username===\"\",onChange:function onChange(event){_this3.setState({username:event.target.value});},placeholder:\"Username\",style:{fontFamily:\"Helvetica\",fontSize:\"32px\",background:\"#ffffff\",padding:\"10px 20px 10px 20px\",// padding: '20px',\nmargin:\"20px\",marginTop:\"20px\",borderRadius:\"12px\",zIndex:\"100\"}}),/*#__PURE__*/_jsxs(FormGroup,{row:true,children:[/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:createRoomChecked,onChange:function onChange(){if(!createRoomChecked&&joinRoomChecked){_this3.setState({joinRoomChecked:!joinRoomChecked});}_this3.setState({createRoomChecked:!createRoomChecked});}}),label:\"Create Room\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:joinRoomChecked,onChange:function onChange(){if(createRoomChecked&&!joinRoomChecked){_this3.setState({createRoomChecked:!createRoomChecked});// setCreateRoomChecked(!createRoomChecked);\n}_this3.setState({joinRoomChecked:!joinRoomChecked});// setJoinRoomChecked(!joinRoomChecked);\n}}),label:\"Join Room\"})]}),createRoomChecked?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){_this3.setState({room:uuidv4()},function(){_this3.setState({roomIdGenerated:true},function(){_this3.joinRoom();// this.setState({startGame: true});\n});});},variant:\"contained\",color:\"primary\",children:\"Generate Room Id\"})}):null,joinRoomChecked?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{value:room,autoFocus:true,helperText:\"Enter Room Id Here...\",onChange:function onChange(event){_this3.setState({room:event.target.value});// setRoom(event.target.value);\n},onKeyPress:function onKeyPress(ev){if(ev.key===\"Enter\"){// Do code here\n_this3.joinRoom();_this3.setState({startGame:true});ev.preventDefault();}}}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){_this3.joinRoom();_this3.setState({startGame:true});// setStartGame(true);\n},variant:\"contained\",color:\"primary\",children:\"Join Room\"})]}):null,roomIdGenerated?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Typography,{children:room})}):null]})]}):null,startGame?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,align:\"center\",justify:\"center\",direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:12,spacing:0,children:/*#__PURE__*/_jsx(React.Fragment,{children:users.map(function(user){return/*#__PURE__*/_jsxs(Grid,{item:true,xs:true,align:\"center\",alignItems:\"center\",justify:\"center\",children:[/*#__PURE__*/_jsx(CountdownCircleTimer,{isPlaying:true,duration:10,strokeWidth:5,size:60,colors:[[\"#004777\",0.33],[\"#F7B801\",0.33],[\"#A30000\",0.33]],children:function children(_ref){var remainingTime=_ref.remainingTime;return remainingTime;}}),/*#__PURE__*/_jsx(Typography,{variant:\"body\",children:\"\".concat(user)})]});})})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{children:\"Room Id: \".concat(room)}),/*#__PURE__*/_jsx(Typography,{variant:\"h1\",children:count}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",ref:this.countingButtonPress,onClick:function onClick(){_this3.handleButtonPress();// this.setState({count: count+1});\n// setCount(count + 1);\n},children:\"Press Me\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12})]})}):null]});}}]);return Main;}(Component);export default Main;","map":{"version":3,"sources":["/home/wkalim/Documents/University_Courses/CS4483/clicker.io/client/src/components/Main.jsx"],"names":["React","Component","Checkbox","FormGroup","FormControlLabel","TextField","Button","Typography","Grid","CountdownCircleTimer","socketIOClient","ENDPOINT","uuidv4","replace","c","r","Math","random","v","toString","generateUniqueNumber","Main","props","clickButton","el","click","countingButtonPress","event","startGame","state","keyCode","handleButtonPress","joinRoom","room","socketIO","username","data","emit","setState","id","count","message","timestamp","Date","now","console","log","loadClient","startingScreen","createRoomChecked","joinRoomChecked","roomIdGenerated","response","users","document","addEventListener","transport","on","disconnect","removeEventListener","padding","target","value","fontFamily","fontSize","background","margin","marginTop","borderRadius","zIndex","ev","key","preventDefault","map","user","remainingTime"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Button,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\n\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\n// import ClientComponent from \"./ClientComponent\";\n\nimport socketIOClient from \"socket.io-client\";\n// import openSocket from \"socket.io-client\";\nconst ENDPOINT = \"http://192.168.4.26:3001\";\n\nfunction uuidv4() {\n  return \"xxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nfunction generateUniqueNumber() {\n  return \"xxxxxxxxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"\",\n      count: 0,\n      loadClient: true,\n      startingScreen: true,\n      createRoomChecked: false,\n      joinRoomChecked: false,\n      roomIdGenerated: false,\n      startGame: false,\n      response: \"\",\n      socketIO: null,\n      id: null,\n      username: \"\",\n      users: [],\n    };\n  }\n\n  clickButton = (el) => {\n    el.click();\n  };\n\n  countingButtonPress = (event) => {\n    const { startGame } = this.state;\n    if (startGame) {\n      if (event?.keyCode === 32) {\n        this.handleButtonPress();\n      }\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.countingButtonPress, false);\n\n    this.setState({ id: generateUniqueNumber() }, () => {\n      this.setState(\n        { socketIO: socketIOClient(ENDPOINT, { transport: [\"websocket\"] }) },\n        () => {\n          this.state.socketIO.on(\"count\", (data) => {\n            this.setState({ count: data });\n          });\n          this.state.socketIO.on(\"users\", (data) => {\n            this.setState({ users: data });\n          });\n        }\n      );\n    });\n\n    return () => this.socketIO.disconnect();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.countingButtonPress, false);\n  }\n\n  joinRoom = () => {\n    const { room, socketIO, username } = this.state;\n    const data = {\n      room: room,\n      username: username,\n    };\n    socketIO.emit(\"room\", data);\n    this.setState({ startGame: true });\n  };\n\n  handleButtonPress = () => {\n    const { id, count, room, socketIO, username } = this.state;\n    // this.setState({ count: count+1});\n\n    const data = {\n      id: id,\n      room: room,\n      message: \"Hello World\",\n      timestamp: Date.now(),\n      username: username,\n    };\n    console.log(data);\n    socketIO.emit(\"buttonPress\", data);\n  };\n\n  render() {\n    const {\n      room,\n      count,\n      loadClient,\n      startingScreen,\n      createRoomChecked,\n      joinRoomChecked,\n      roomIdGenerated,\n      startGame,\n      response,\n      socketIO,\n      username,\n      users,\n    } = this.state;\n    return (\n      <>\n        {/* <Typography variant=\"h1\">Addiction With Extra Steps</Typography> */}\n        {!startGame ? (\n          <>\n            {startingScreen && (\n              <>\n                <Typography variant=\"h1\" style={{ padding: \"0.5em\" }}>\n                  Clicker.io\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  onClick={() => {\n                    this.setState({ startingScreen: false });\n                  }}\n                >\n                  Start\n                </Button>\n              </>\n            )}\n            {!startingScreen && (\n              <>\n                <TextField\n                  value={username}\n                  autoFocus={true}\n                  // required\n                  error={username === \"\"}\n                  onChange={(event) => {\n                    this.setState({ username: event.target.value });\n                  }}\n                  placeholder={\"Username\"}\n                  style={{\n                    fontFamily: \"Helvetica\",\n                    fontSize: \"32px\",\n                    background: \"#ffffff\",\n                    padding: \"10px 20px 10px 20px\",\n                    // padding: '20px',\n                    margin: \"20px\",\n                    marginTop: \"20px\",\n                    borderRadius: \"12px\",\n                    zIndex: \"100\",\n                  }}\n                />\n                <FormGroup row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={createRoomChecked}\n                        onChange={() => {\n                          if (!createRoomChecked && joinRoomChecked) {\n                            this.setState({\n                              joinRoomChecked: !joinRoomChecked,\n                            });\n                          }\n                          this.setState({\n                            createRoomChecked: !createRoomChecked,\n                          });\n                        }}\n                      />\n                    }\n                    label=\"Create Room\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={joinRoomChecked}\n                        onChange={() => {\n                          if (createRoomChecked && !joinRoomChecked) {\n                            this.setState({\n                              createRoomChecked: !createRoomChecked,\n                            });\n                            // setCreateRoomChecked(!createRoomChecked);\n                          }\n                          this.setState({ joinRoomChecked: !joinRoomChecked });\n                          // setJoinRoomChecked(!joinRoomChecked);\n                        }}\n                      />\n                    }\n                    label=\"Join Room\"\n                  />\n                </FormGroup>\n                {createRoomChecked ? (\n                  <>\n                    <Button\n                      onClick={() => {\n                        this.setState({ room: uuidv4() }, () => {\n                          this.setState({ roomIdGenerated: true }, () => {\n                            this.joinRoom();\n                            // this.setState({startGame: true});\n                          });\n                        });\n                      }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Generate Room Id\n                    </Button>\n                  </>\n                ) : null}\n                {joinRoomChecked ? (\n                  <>\n                    <TextField\n                      value={room}\n                      autoFocus={true}\n                      helperText={\"Enter Room Id Here...\"}\n                      onChange={(event) => {\n                        this.setState({ room: event.target.value });\n                        // setRoom(event.target.value);\n                      }}\n                      onKeyPress={(ev) => {\n                        if (ev.key === \"Enter\") {\n                          // Do code here\n                          this.joinRoom();\n                          this.setState({ startGame: true });\n                          ev.preventDefault();\n                        }\n                      }}\n                    />\n                    <Button\n                      onClick={() => {\n                        this.joinRoom();\n                        this.setState({ startGame: true });\n                        // setStartGame(true);\n                      }}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Join Room\n                    </Button>\n                  </>\n                ) : null}\n\n                {roomIdGenerated ? (\n                  <>\n                    <Typography>{room}</Typography>\n                    {/* <TextField\n          value={room}\n          disabled={true}\n        /> */}\n                  </>\n                ) : null}\n              </>\n            )}\n          </>\n        ) : null}\n        {startGame ? (\n          <>\n            {/* {users.map((user) => {\n              return (\n                <Typography variant=\"body\">{`${user}`}</Typography>\n              )\n            })} */}\n            <Grid\n              container\n              spacing={0}\n              align=\"center\"\n              justify=\"center\"\n              direction=\"column\"\n            >\n              <Grid container item xs={12} spacing={0}>\n                <React.Fragment>\n                  {users.map((user) => {\n                    return (\n                      <Grid\n                        item\n                        xs\n                        align={\"center\"}\n                        alignItems={\"center\"}\n                        justify={\"center\"}\n                      >\n                        <CountdownCircleTimer\n                          isPlaying\n                          duration={10}\n                          strokeWidth={5}\n                          size={60}\n                          colors={[\n                            [\"#004777\", 0.33],\n                            [\"#F7B801\", 0.33],\n                            [\"#A30000\", 0.33],\n                          ]}\n                        >\n                          {({ remainingTime }) => remainingTime}\n                        </CountdownCircleTimer>\n                        <Typography variant=\"body\">{`${user}`}</Typography>\n                      </Grid>\n                    );\n                  })}\n                </React.Fragment>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography>{`Room Id: ${room}`}</Typography>\n                <Typography variant=\"h1\">{count}</Typography>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  ref={this.countingButtonPress}\n                  onClick={() => {\n                    this.handleButtonPress();\n                    // this.setState({count: count+1});\n                    // setCount(count + 1);\n                  }}\n                >\n                  Press Me\n                </Button>\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n          </>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}